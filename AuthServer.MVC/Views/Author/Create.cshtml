@model AuthorDto

@{
    ViewData["Title"] = "New Author";
}

<h4>Create new Author</h4>

<form asp-action="Create" method="post">
    <div class="row">
        <div class="col s12">
            <input type="submit" value="Create" class="btn btn-default"/>
        </div>
        <div class="col s6">
            <input placeholder="First Name" asp-for="FirstName" class="validate"/>
        </div>
        <div class="col s6">
            <input placeholder="Last Name" asp-for="LastName" class="validate"/>
        </div>
        <div class="col s12">
            <p>Add books to this author</p>
            <div class="input-field col s9">
                <i class="material-icons prefix">search</i>
                <input type="text" id="autocomplete-input" class="autocomplete">
                <label for="autocomplete-input">Search books</label>
            </div>
        </div>
        <div class="col s12" id="item-list">
        </div>
        
        <div class="col s3">
            <input type="submit" value="Add Book" class="btn btn-default"/>
        </div>
    </div>    
    
    
</form>


@section Scripts
{
    <script>
        $(document).ready(function() {

            var bookTitles = [];
            var bookTitlesArray = {};

            $.get('http://localhost:5004/api/books/getTitles',
                function(data) {
                    var books = data.data;
                    for (var i = 0; i < books.length; i++) {
                        bookTitles.push(books[i]);
                        bookTitlesArray[books[i].title] = null;
                    }
                    
                    $('#autocomplete-input').autocomplete({
                        data: bookTitlesArray,
                        limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
                        onAutocomplete: function(val) {
                            // Callback function when value is autcompleted.
                            var book = bookTitles.find(function(element) {
                                return element.title === val;
                            });
                            var i = $(".items").length;
                            var n = '<input disabled type="hidden" name="Books[' + i + '].Id" value="'+ book.id +'" />';
                            n += '<input disabled type="text" class="items" name="Books[' + i + '].Title" value="'+ book.title +'" />';
                            $("#item-list").append(n);
                        },
                        minLength: 1 // The minimum length of the input for the autocomplete to start. Default: 1.
                    });
                    
                });

            $("#add").click(function(e) {
                e.preventDefault();
                var i = $(".items").length;
                var n = '<input type="text" class="items" name="Books[' + i + '].Title" />';
                $("#item-list").append(n);
            });

            
        });


    </script>
}
