@model AuthorDto

@{
    ViewData["Title"] = "Edit Author";
}

<h4>Edit Author</h4>

<div class="row">
    <form id="authorForm" asp-action="Edit" method="post">
        <div class="col s12 m9">
            <div class="card">
                <div class="card-content">
                    <div class="card-title">
                        Add details for the author
                    </div>
                    
                    <div class="row">
                        <div class="col s12 m6">
                            <input type="text" name="firstName" placeholder="First Name" asp-for="FirstName"/>
                        </div>
                        <div class="col s12 m6">
                            <input type="text" name="lastName" placeholder="Last Name" asp-for="LastName"/>
                        </div>
                        <div class="col s12 right-align">
                            <input type="submit" value="Create" class="btn btn-default"/>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="col s12 m3">
            <div class="row" >
                <p>Books selected:</p>
                <div class="col s12" id="item-list" asp-for="Books">
                    @{
                        var i = 0;
                    }
                    @foreach (var book in Model.Books)
                    {
//                        var html = "<div class='items' id='book-" + i + "'>";
//                        html += '<input class="isbn" type="hidden" name="Books[' + i + '].ISBN" value="'+ isbn +'" />';
//                        html += '<input class="description" type="hidden" name="Books[' + i + '].Description" value="'+ description +'" />';
//                        html += '<input class="datePublished" type="hidden" name="Books[' + i + '].DatePublished" value="'+ datePublished +'" />';
//                        html += '<input class="stock" type="hidden" name="Books[' + i + '].Stock" value="'+ stock +'" />';
//                        html += '<div class="input-field">' +
//                                '<input type="text" class="title" name="Books[' + i + '].Title" value="' + title + '" readonly="readonly"/>' +
//                                '<i class="deleteButton material-icons prefix" style="margin-top:10px; font-size:18px; cursor: pointer">close</i>' +
//                                '</div>';
//                        html += '</div>'; 
                        <div class="items">
                            <input class="isbn" type="hidden" name="Books[@i].ISBN" value="@book.ISBN"/>
                            <input class="description" type="hidden" name="Books[@i].Description" value="@book.Description" />
                            <input class="datePublished" type="hidden" name="Books[@i].DatePublished" value="@book.DatePublished" />
                            <input class="stock" type="hidden" name="Books[@i].Stock" value="@book.Stock" />
                            <div class="input-field suffix">
                                <input type="text" class="title" name="Books[@i].Title" value="@book.Title" readonly="readonly"/>
                                <i class="deleteButton material-icons prefix" style="margin-top: 10px; font-size: 18px; cursor: pointer">close</i>
                            </div>
                        </div>
                        i++;
                    }
                </div>
            </div>
        </div>
    </form>
    <div class="col s12 m9">
        <div class="card">
            <div class="card-content">
                <div class="row">
                    <div class="col s12">
                        <div class="card-title">
                            Add books to this author
                        </div>
                    </div>
                    <div class="input-field col s12 m9">
                        <i class="material-icons prefix" style="margin-top:10px">search</i>
                        <input type="text" id="autocomplete-input" class="autocomplete" autocomplete="off">
                        <label for="autocomplete-input">Search books</label>
                    </div>
                    <div class="col s12 m3 right-align">
                        <input type="button" id="add-book" value="Add Book" style="margin-top: 24px" disabled class="btn btn-default"/>
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-content">
                <div class="row">
                    <div class="col s12 m12">
                        <div class="card-title">
                            Create a new book
                        </div>
                    </div>
                        
                    <form id="new-book-form" data-parsley-validate="" novalidate>
                        <div class="row">
                            <div class="col s12 m6">
                                <input name="title" id="title" type="text" placeholder="Title"/>
                            </div>
                            <div class="col s12 m6">
                                <input name="isbn" id="isbn" placeholder="ISBN" required=""/>
                            </div>
                            <div class="col s12 m12">
                                <textarea name="description" id="description" class="materialize-textarea" placeholder="Description" data-length="250" data-parsley-maxlength="250"></textarea>
                            </div>
                            <div class="col s12 m6">
                                <input name="datePublished" id="datePublished" type="text" class="datepicker" placeholder="Date Published" required="">
                            </div>
                            <div class="col s12 m6">
                                <input type="number" id="stock" name="stock" placeholder="Stock" value="0"/>
                            </div>
                        </div>
                        <div class="col s12 m3 right-align">
                            <input type="submit" value="Add Book" style="margin-top: 24px" class="btn btn-default"/>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        'use strict';    
        $(document).ready(function() {

            var selectedBook;
            var bookTitles = [];
            var bookTitlesArray = {};

            $(".datepicker").pickadate({
                selectMonths: true,
                selectYears: 150,// Creates a dropdown to control month
                min: new Date(1400, 0), // Creates a dropdown of 15 years to control year,
                today: 'Today',
                clear: 'Clear',
                close: 'Ok',
                closeOnSelect: true
            });

            $("#authorForm").validate({
                errorClass: 'invalid',
                debug: true,
                rules: {
                    firstName: 'required',
                    lastName: 'required'
                },
                messages: {
                    firstName: 'Please insert a first name for the author',
                    lastName: 'Please insert a last name for the author'
                },
                submitHandler: function(form) {
                    // do other things for a valid form
                    form.submit();
                }
            });

            $("#new-book-form").validate({
                errorClass: 'invalid',
                rules: {
                    title: 'required',
                    isbn: 'required',
                    description: 'required',
                    stock: {
                        required: true,
                        min: 0,
                        max: 45
                    },
                    datePublised: 'required'
                },
                messages: {
                    title: 'Please insert a title',
                    isbn: 'Please insert the ISBN of the book',
                    description: 'Please provide a small description for the book',
                    stock: {
                        min: "Minimum value is 0",
                        max: "Maximum value is 45"
                    },
                    datePublished: "Please choose a date of publishing"
                },
                submitHandler: function (form) { // for demo
                    var title = $("#title").val();
                    var isbn = $("#isbn").val();
                    var description = $("#description").val();
                    var datePublished = $("#datePublished").val();
                    var stock = $("#stock").val();
                    var i = $(".items").length;
                    var html = "<div class='items' id='book-" + i + "'>";
                    html += '<input class="isbn" type="hidden" name="Books[' + i + '].ISBN" value="'+ isbn +'" />';
                    html += '<input class="description" type="hidden" name="Books[' + i + '].Description" value="'+ description +'" />';
                    html += '<input class="datePublished" type="hidden" name="Books[' + i + '].DatePublished" value="'+ datePublished +'" />';
                    html += '<input class="stock" type="hidden" name="Books[' + i + '].Stock" value="'+ stock +'" />';
                    html += '<div class="input-field">' +
                        '<input type="text" class="title" name="Books[' + i + '].Title" value="' + title + '" readonly="readonly"/>' +
                        '<i class="deleteButton material-icons prefix" style="margin-top:10px; font-size:18px; cursor: pointer">close</i>' +
                        '</div>';
                    html += '</div>';                 
                    $("#item-list").append(html);
                    refreshNames();
                    return false;
                }
            });

            $.get('http://localhost:5004/api/books/getTitles',
                function(data) {
                    var books = data.data;
                    for (var i = 0; i < books.length; i++) {
                        bookTitles.push(books[i]);
                        bookTitlesArray[books[i].title] = null;
                    }
                    
                    $('#autocomplete-input').autocomplete({
                        data: bookTitlesArray,
                        limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
                        onAutocomplete: function(val) {
                            // Callback function when value is autcompleted.
                            selectedBook = bookTitles.find(function(element) {
                                return element.title === val;
                            });

                            $("#add-book").removeAttr("disabled");
                        },
                        minLength: 1 // The minimum length of the input for the autocomplete to start. Default: 1.
                    });
                    
                });

            $("#item-list").on("click", ".deleteButton" ,function(e) {
                var elementToDelete = $(e.target).parent().parent();
                $(elementToDelete).remove();
                refreshNames();
            });
                
            $("#add-book").click(function(e) {
                console.log("CLICK");
                e.preventDefault();
                var i = $(".items").length;
                var html = "<div class='items' id='book-" + i + "'>";
                html += '<input class="id" type="hidden" name="Books[' + i + '].Id" value="'+ selectedBook.id + '" />';
//                html += '<input class="isbn" type="hidden" name="Books[' + i + '].ISBN" value="" />';
//                html += '<input class="description" type="hidden" name="Books[' + i + '].Description" value="" />';    
//                html += '<input class="stock" type="hidden" name="Books[' + i + '].Stock" />';
                html += '<div class="input-field">' +
                    '<input type="text" class="title" name="Books[' + i + '].Title" value="' + selectedBook.title + '" readonly="readonly"/>' +
                    '<i class="deleteButton material-icons prefix" style="margin-top:10px; font-size:18px; cursor: pointer">close</i>' +
                    '</div>';
                html += '</div>';                 
                $("#item-list").append(html);
                refreshNames();
            });

            function refreshNames() {
                $("#item-list").find(".items").each(function(i) {
                    $(this).find(".id").attr('name', 'Books[' + i + '].Id');
                    $(this).find(".title").attr('name', 'Books[' + i + '].Title');
                    $(this).find(".isbn").attr('name', 'Books[' + i + '].ISBN');
                    $(this).find(".description").attr('name', 'Books[' + i + '].Description');                        
                    $(this).find(".datePublished").attr('name', 'Books[' + i + '].DatePublished');
                    $(this).find(".stock").attr('name', 'Books[' + i + '].Stock');
                });
            }
            
        });


    </script>
}